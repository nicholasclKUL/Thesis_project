SOLVED PROBLEMS:

(1) Gradient and cost function will be different between SS and MS throughut optimization, because they are different formulations (e.g different number of decision variabes, cost function, etc). They will only "match" upon convergence. Is this also true for the inner optimization? Do the inner problems of SS and MS share the same minimizer and minima?

(2) Algorithm's behavior improved after fixing mistakes in PANOC's cost evaluation.  

(3) CHECKED: grad_ψ(x_k) and ψ(x_k) remains constant during QUB checking

(4) In "Parallel in time Multiple-Shooting...", the author says that the convergence of the inner problem is stricly related to the penalty parameters, c. Could it be the issue? The stoping criteria is |grad_L| < e = o(1/c). We have c=1, hence e=1. However, my solver stops at    |grad_L|~=5.

(5) Has ψ(x̂_k) been updated correctly?? It looks so!

(6) Does derived grad_ψ matches ψ??

(7) Try optimization using finite difference! If result is the same as using the derived gradient, then it is correct!
	-> FD gradient matches derived gradient (Exact Gradient, EG)!
	-> FD gradient explodes as we approach the minima!
		
(8) Minimizer found when using ALM and PANOC together; This aligns with (4): minima of problem will only be found when ALM converges.
		
(9) QUB problem fixed

(10) Although in OBS(8) the code had a bug that would stop PANOC after a few iterations, this however proved benefitial to have a faster
convergence to ALM; This aligns with (4); for the ALM we only need a rough estimate of the solution of the inner problem, hence we can keep the number of iterations the smallest possible, this will avoid the expensive iterations of PANOC due to the necessity of simulate our PDE inumerous times (evaluations of f(x,u)).  

(11) L-BFGS makes PANOC takes more iterations to converge! Why is that??

(12) Check code of Penalty and lagrange multipliers update;
	-> delta lowercase is not being updated, that's why ALM is currently not terminating;

UNSOLVED PROBLEMS AND NEXT STEPS:

-> Parallelize L-BFGS

-> Gauss-Newton step worsens convergence! Check whether matrices are being updated correctly!

-> Next improvements to the code: 
	-> Add AD interface using SACADO; 
	-> Add search for active and inactive constraints;
	-> Add box constraints for u and x separately;
		-> Modify TypeErasedControlProblem to add the function .get_X();   
